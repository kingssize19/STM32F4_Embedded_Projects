1. SysClockConfig() Fonksiyonu
   
   Bu fonksiyon, mikrodenetleyicinin saat sistemini yapılandırır. Saat yapılandırması, HSE (High Speed External) osilatörünü kullanarak PLL (Phase  Locked Loop) ile sistem saatinin ayarlanmasını içerir.

1.1. HSE'yi Etkinleştirme ve Bekleme

     RCC->CR |= RCC_CR_HSEON;              // HSE osilatörünü etkinleştirir.
     while (!(RCC->CR & RCC_CR_HSERDY));   // HSE osilatörünün hazır olup olmadığını kontrol eder. HSE "hazır" olduğunda bit set edilir.

1.2. Güç Yönetimi ve Voltaj Regülatörü

     RCC->APB1ENR |= RCC_APB1ENR_PWREN;    // Güç yönetimi (PWR) birimini etkinleştirir.
     PWR->CR |= PWR_CR_VOS;                // Voltaj Ölçekleme ayarlarını yapılandırır. Bu ayar, işlemcinin çalıştığı voltaj seviyesini belirler.

1.3. Flash Ayarları

     FLASH->ACR |= FLASH_ACR_ICEN | FLASH_ACR_DCEN | FLASH_ACR_PRFTEN | FLASH_ACR_LATENCY_5WS;

     // FLASH_ACR_ICEN : Flash önbellek komutlarını etkinleştirir.
     // FLASH_ACR_DCEN : Flash veri önbelleğini etkinleştirir.
     // FLASH_ACR_PRFTEN : Flash ön bellekleme işlemini etkinleştirir.
     // FLASH_ACR_LATENCY_5WS : Flash bellek erişim gecikmesini 5 "hızlı" döngüye ayarlar.

1.4. Prescaler Ayarları

     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;      // AHB saatini 1 bölerek (yani bölme yapmadan) kullanır.
     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;     // APB1 saatini 4'e böler.
     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;     // APB2 saatini 2'ye böler.

1.5. PLL Yapılandırması

/*
     #define PLL_M	4
     #define PLL_N	180
     #define PLL_P	0	//PLLP = 2
*/
     RCC->PLLCFGR |= (PLL_M << 0);            // PLL giriş saatini bölen faktördür. (M = 4)
     RCC->PLLCFGR |= (PLL_N << 6);            // PLL çarpanıdır. (N = 180)
     RCC->PLLCFGR |= (PLL_P << 16);           // PLL çıkışını bölme faktörü (PLLP = 2)
     RCC->PLLCFGR |= RCC_PLLCFGR_PLLSRC_HSE;  // PLL kaynak olarak HSE kullanılır.

1.6. PLL' yi Etkinleştirme ve Bekleme

     RCC->CR |= (1 << 24);                  // RCC_CR_PLLON  : PLL 'yi etkinleştirir.
     while (!(RCC->CR & RCC_CR_PLLRDY));    // RCC_CR_PLLRDY : PLL 'in hazır olup olmadığını kontrol eder.

1.7. Saat Kaynağını Seçme ve Bekleme

     RCC->CFGR |= RCC_CFGR_SW_PLL;                              // Sistem saat kaynağını PLL olarak seçer.
     while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);    // PLL 'in saat kaynağı olarak ayarlandığını kontrol eder.



2. GPIO_Config() Fonksiyonu

   Bu fonksiyon, GPIO (General Purpose Input/Output) pinlerini yapılandırır.

2.1. GPIO Saatini Etkinleştirme

     RCC->AHB1ENR |= (1 << 0);      // GPIOA saatini etkinleştir.

2.2. Pin Modunu Çıkış Olarak Ayarlama

     GPIOA->MODER |= (1 << 10);    // PA5 pinini çıkış olarak yapılandırır.

2.3. Çıkış Modunu Yapılandırma

     GPIOA->OTYPER = 0;        // Çıkış tipini ayarlar (0 : push-pull)
     GPIOA->OSPEEDR = 0;       // Çıkış hızını ayarlar (0 : düşük hız)


3. Delay() Fonksiyonu

   void delay(uint32_t time)
   {
      while (time--);
   }

   Bu fonksiyon basit bir zamanlayıcı işlevi görür. Bir döngü içinde zaman sayacı (time) azalır. Bu bir ge gecikme oluşturur.



4. main() Fonksiyonu

   int main(void)
   {
	      SysClockConfig();          // Saat yapılandırmasını yapar.
	      GPIO_Config();            // GPIO ayarlarını yapar

	      while (1)
        {
		        GPIOA->BSRR |= (1 << 5);		// PA5 pinini set eder
		        delay(5000000);
		        GPIOA->BSRR |= (1 << 21);	// PA5 pinini reset eder
		        delay(5000000);
	      }
    }


















